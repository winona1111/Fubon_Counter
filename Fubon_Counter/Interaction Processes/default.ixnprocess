<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:datatypes="http://studio.genesyslab.com/common/datatypes/" xmlns:ipd="http://studio.genesyslab.com/ipd/" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xsi:schemaLocation="http://studio.genesyslab.com/common/datatypes/ http://studio.genesyslab.com/common/#//datatypes">
  <ipd:IpdDiagram xmi:id="_xE6TQPr8Ed600N2F7x2Dtw" name="default" designedUsing="Composer 8.1.561.23">
    <blocks xmi:type="ipd:WorkflowBlock" xmi:id="_CtK-8AtaEd-dHN2RgOcklw" name="defaultWorkflow" terminating="true" category="Workflow" resource="Workflows/default.workflow"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q4Mn_EeK-oqtpZhLWhQ" name="ws" value="http://www.genesyslab.com/modules/ws"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q4cn_EeK-oqtpZhLWhQ" name="queue" value="http://www.genesyslab.com/modules/queue"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q4sn_EeK-oqtpZhLWhQ" name="dialog" value="http://www.genesyslab.com/modules/dialog"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q48n_EeK-oqtpZhLWhQ" name="session" value="http://www.genesyslab.com/modules/session"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q5Mn_EeK-oqtpZhLWhQ" name="ixn" value="http://www.genesyslab.com/modules/interaction"/>
    <namespaces xmi:type="datatypes:Property" xmi:id="_pM8q5cn_EeK-oqtpZhLWhQ" name="classification" value="http://www.genesyslab.com/modules/classification"/>
    <waitForEvent>interaction.present</waitForEvent>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6kFtxEe6yI_PH36Y4bA" name="interaction added" event="interaction.added" condition="typeof system.SessionID == 'undefined'" body="&lt;log expr=&quot;_sessionid + ': interaction.added received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;assign location=&quot;system.SessionID&quot; expr=&quot;_sessionid&quot;/>&#xA;&lt;assign location=&quot;system.StartEvent&quot; expr=&quot;_event&quot;/>&#xA;&lt;assign location=&quot;App_StartEvent&quot; expr=&quot;system.StartEvent&quot;/>&#xA;&lt;script>initializeRoutingSystemVariables();&lt;/script>&#xA;&lt;assign location=&quot;InteractionID&quot; expr=&quot;system.InteractionID&quot;/>&#xA;&lt;if cond=&quot;typeof _genesys.ixn.interactions[_event.data.interactionid] != 'undefined'&#xA;&#x9;&#x9;&#x9;&amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_event.data.interactionid].voice != 'undefined'&#xA;&#x9;&#x9;&#x9;&amp;amp;&amp;amp; _genesys.ixn.interactions[_event.data.interactionid].voice.type == 'consult'&#xA;         &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_event.data.interactionid].parentid!='undefined'&#xA;         &amp;amp;&amp;amp; _genesys.ixn.interactions[_event.data.interactionid].parentid!=''&quot;>&#xA;&#x9;&lt;!-- Consult call started strategy. Attaching primary call...-->&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': attaching parent interaction'&quot;/>&#xA;&#x9;&lt;ixn:attach requestid=&quot;system.RequestID&quot; interactionid=&quot;_genesys.ixn.interactions[_event.data.interactionid].parentid&quot;/>&#xA;&lt;else/>&#xA;&#x9;&lt;!-- Normal call started strategy. Proceeding with session ...-->&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': processing interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;if cond=&quot;_data.start_workflow_onrouterequest==false&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.added event starting the worklfow application'&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.start&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>&lt;/if>" target="false" description="This handler is typically used to start the application when dealing with voice interaction. In case the interaction is of type consult, the default behavior is to attach the parent interaction to the session and to delay the application execution until the interaction.attach.done event is received."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6kVtxEe6yI_PH36Y4bA" name="interaction attached" event="interaction.attach.done" condition="_event.data.requestid == system.RequestID" body="&lt;log expr=&quot;_sessionid + ': interaction.attach.done received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;!-- Processing primary call ...-->&#xA;&lt;log expr=&quot;_sessionid + ': processing primary interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;if cond=&quot;_data.start_workflow_onrouterequest==false&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.attach.done event starting the worklfow application'&quot;/>&#xA;&#x9;&#x9;&lt;send event=&quot;'application.start'&quot; delay=&quot;'1s'&quot;>&#xA;&#x9;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;(typeof system.StartEvent != 'undefined' &amp;amp;&amp;amp; typeof system.StartEvent.data != 'undefined') ? system.StartEvent.data.interactionid : undefined&quot;/>&#xA;&#x9;&#x9;&lt;/send>&#x9;&lt;/if>" target="false" description="This handler is used for voice consult scenario. It starts the application after the parent interaction is attached to the session."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6kltxEe6yI_PH36Y4bA" name="interaction route request" event="interaction.onrouterequest" condition="typeof system.SessionID != 'undefined'" body="&lt;log expr=&quot;_sessionid + ': interaction.onrouterequest received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': processing interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;if cond=&quot;_data.start_workflow_onrouterequest==true&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.onrouterequest event starting the worklfow application'&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.start&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&#x9;&lt;/if>&#xA;" target="false"/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6k1txEe6yI_PH36Y4bA" name="interaction merged" event="interaction.onmerge" condition="system.Type == 'consult' &amp;amp;&amp;amp; _event.data.frominteractionid == _data.system.context.InteractionID &amp;amp;&amp;amp; _event.data.tointeractionid == _data.system.context.ParentInteractionID" body="&lt;log expr=&quot;_sessionid + ': interaction.onmerge received in IPD event handler from ' + _event.data.frominteractionid + ' to ' + _event.data.tointeractionid&quot;/>&#xA;&lt;assign location=&quot;_data.system.context.InteractionID&quot; expr=&quot;_data.system.context.ParentInteractionID&quot;/>&#xA;&lt;assign location=&quot;_data.system.context.ParentInteractionID&quot; expr=&quot;undefined&quot;/>" target="false" description="This handler is used for voice interaction scenarios when the current and parent interactions are merged."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6lFtxEe6yI_PH36Y4bA" name="interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.InteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion')" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (effective interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'current interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used for voice interaction processing to terminate the application when the interaction is no longer associated with the current ORS session."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6lVtxEe6yI_PH36Y4bA" name="initial interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.InitialInteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion') &amp;amp;&amp;amp; system.Type != 'consult' " body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (initial interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'initial interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" description="This handler is typically used for voice interaction processing to terminate the application when the interaction that triggered this session is no longer associated with the current ORS session."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6lltxEe6yI_PH36Y4bA" name="parent interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.ParentInteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion') &amp;amp;&amp;amp; system.Type == 'consult'" enabled="false" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (parent interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'parent interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used for voice consult interaction processing to terminate the application when the parent interaction is no longer associated with the current ORS session."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6l1txEe6yI_PH36Y4bA" name="interaction party state changed" event="interaction.partystatechanged" condition="_event.data.interactionid == _data.system.context.InteractionID" body="&lt;log expr=&quot;_sessionid + ': interaction.partystatechanged received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;script>if (typeof _data.system.context.InteractionID != 'undefined' &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'&#xA;               &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice != 'undefined' )&#xA;        { &#xA;            if ( typeof _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties != 'undefined' )&#xA;            {&#xA;                var thisParty = '';&#xA;                for ( var party in _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties )&#xA;                {&#xA;                    thisParty = _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties[ party ];&#xA;                    if ( thisParty.device != null &amp;amp;&amp;amp; thisParty.device == _event.data.focusdeviceid )&#xA;                    {&#xA;                        if ( typeof thisParty.devicetype != 'undefined' &amp;amp;&amp;amp; (thisParty.devicetype == 'routepoint' || thisParty.devicetype == 'queue') &amp;amp;&amp;amp; thisParty.devicetype != 'agent' &amp;amp;&amp;amp; thisParty.devicetype != 'unknown')&#xA;                       {&#xA;                          _data.system.context.ThisDN = _event.data.focusdeviceid;&#xA;                       }&#xA;                    }&#xA;               }&#xA;           }&#xA;}&#xA;else if(typeof _data.system.context.InteractionID != 'undefined' &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'){&#xA;&#x9; _data.system.context.ThisDN = _event.data.focusdeviceid;&#xA;}&#xA;&lt;/script>" target="false" description="This handler is used when the platform detects a party state change for a party associated with the interaction."/>
    <events xmi:type="datatypes:TransitionCommonItem" xmi:id="_YZp6mFtxEe6yI_PH36Y4bA" name="catch all errors" event="error" condition="" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': unexpected error received in IPD event handler '&quot;/>&#xA;&#x9;&lt;if cond=&quot;typeof _event != 'undefined' &amp;amp;&amp;amp; typeof _event.data != 'undefined' &amp;amp;&amp;amp; typeof _event.data.description != 'undefined'&quot;>&#xA;&#x9;&#x9;&lt;log expr=&quot;_sessionid + ': Error message: ' + _event.data.description&quot; />&#xA;&#x9;&lt;/if>&#xA;&#x9;&lt;script>&#xA;&#x9;&#x9;&lt;![CDATA[&#xA;&#x9;&#x9;var autostop = (typeof _data.system.context.InteractionID != 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice == 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (_data.system.context.TerminateIxnOnExit == '1' || _data.system.context.TerminateIxnOnExit == 1);&#xA;&#x9;&#x9;]]>&#xA;&#x9;&lt;/script>&#xA;&#x9;&lt;if cond=&quot;autostop&quot;>&#xA;&#x9;&#x9;&lt;ixn:terminate interactionid=&quot;_data.system.context.InteractionID&quot; reason=&quot;'Auto-stop interaction'&quot;/>&#xA;&#x9;&lt;/if>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_data.system.context.InteractionID&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used to terminate the application when any error event is raised while executing this application and this error event is not handled by the application."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNiMOWEeWIDMqhxVagZg" name="interaction added" event="interaction.added" condition="typeof system.SessionID == 'undefined'" body="&lt;log expr=&quot;_sessionid + ': interaction.added received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;assign location=&quot;system.SessionID&quot; expr=&quot;_sessionid&quot;/>&#xA;&lt;assign location=&quot;system.StartEvent&quot; expr=&quot;_event&quot;/>&#xA;&lt;assign location=&quot;App_StartEvent&quot; expr=&quot;system.StartEvent&quot;/>&#xA;&lt;script>initializeRoutingSystemVariables();&lt;/script>&#xA;&lt;assign location=&quot;InteractionID&quot; expr=&quot;system.InteractionID&quot;/>&#xA;&lt;if cond=&quot;typeof _genesys.ixn.interactions[_event.data.interactionid] != 'undefined'&#xA;&#x9;&#x9;&#x9;&amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_event.data.interactionid].voice != 'undefined'&#xA;&#x9;&#x9;&#x9;&amp;amp;&amp;amp; _genesys.ixn.interactions[_event.data.interactionid].voice.type == 'consult'&#xA;         &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_event.data.interactionid].parentid!='undefined'&#xA;         &amp;amp;&amp;amp; _genesys.ixn.interactions[_event.data.interactionid].parentid!=''&quot;>&#xA;&#x9;&lt;!-- Consult call started strategy. Attaching primary call...-->&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': attaching parent interaction'&quot;/>&#xA;&#x9;&lt;ixn:attach requestid=&quot;system.RequestID&quot; interactionid=&quot;_genesys.ixn.interactions[_event.data.interactionid].parentid&quot;/>&#xA;&lt;else/>&#xA;&#x9;&lt;!-- Normal call started strategy. Proceeding with session ...-->&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': processing interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.start&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used to start the application when dealing with voice interaction. In case the interaction is of type consult, the default behavior is to attach the parent interaction to the session and to delay the application execution until the interaction.attach.done event is received."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNicOWEeWIDMqhxVagZg" name="interaction attached" event="interaction.attach.done" condition="_event.data.requestid == system.RequestID" body="&lt;!-- Processing primary call ...-->&#xA;&lt;log expr=&quot;_sessionid + ': processing primary interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;send event=&quot;'application.start'&quot; delay=&quot;'1s'&quot;>&#xA;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;(typeof system.StartEvent != 'undefined' &amp;amp;&amp;amp; typeof system.StartEvent.data != 'undefined') ? system.StartEvent.data.interactionid : undefined&quot;/>&#xA;&lt;/send>" target="false" description="This handler is used for voice consult scenario. It starts the application after the parent interaction is attached to the session."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNisOWEeWIDMqhxVagZg" name="interaction merged" event="interaction.onmerge" condition="system.Type == 'consult' &amp;amp;&amp;amp; _event.data.frominteractionid == _data.system.context.InteractionID &amp;amp;&amp;amp; _event.data.tointeractionid == _data.system.context.ParentInteractionID" body="&lt;log expr=&quot;_sessionid + ': interaction.onmerge received in IPD event handler from ' + _event.data.frominteractionid + ' to ' + _event.data.tointeractionid&quot;/>&#xA;&lt;assign location=&quot;_data.system.context.InteractionID&quot; expr=&quot;_data.system.context.ParentInteractionID&quot;/>&#xA;&lt;assign location=&quot;_data.system.context.ParentInteractionID&quot; expr=&quot;undefined&quot;/>" target="false" description="This handler is used for voice interaction scenarios when the current and parent interactions are merged."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNi8OWEeWIDMqhxVagZg" name="interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.InteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion')" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (effective interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'current interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used for voice interaction processing to terminate the application when the interaction is no longer associated with the current ORS session."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNjMOWEeWIDMqhxVagZg" name="initial interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.InitialInteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion') &amp;amp;&amp;amp; system.Type != 'consult' " body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (initial interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'initial interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" description="This handler is typically used for voice interaction processing to terminate the application when the interaction that triggered this session is no longer associated with the current ORS session."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNjcOWEeWIDMqhxVagZg" name="parent interaction deleted" event="interaction.deleted" condition="_event.data.interactionid == _data.system.context.ParentInteractionID &amp;amp;&amp;amp; (!_event.data.resultof || _event.data.resultof == 'deletion') &amp;amp;&amp;amp; system.Type == 'consult'" enabled="false" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': interaction.deleted (parent interaction) received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_event.data.interactionid&quot;/>&#xA;&#x9;&#x9;&lt;param name=&quot;reason&quot; expr=&quot;'parent interaction deleted'&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used for voice consult interaction processing to terminate the application when the parent interaction is no longer associated with the current ORS session."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNjsOWEeWIDMqhxVagZg" name="interaction party state changed" event="interaction.partystatechanged" condition="_event.data.interactionid == _data.system.context.InteractionID" body="&lt;log expr=&quot;_sessionid + ': interaction.partystatechanged received in IPD event handler for interaction ' + _event.data.interactionid&quot;/>&#xA;&lt;script>if (typeof _data.system.context.InteractionID != 'undefined' &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'&#xA;               &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice != 'undefined' )&#xA;        { &#xA;            if ( typeof _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties != 'undefined' )&#xA;            {&#xA;                var thisParty = '';&#xA;                for ( var party in _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties )&#xA;                {&#xA;                    thisParty = _genesys.ixn.interactions[ _data.system.context.InteractionID ].parties[ party ];&#xA;                    if ( thisParty.device != null &amp;amp;&amp;amp; thisParty.device == _event.data.focusdeviceid )&#xA;                    {&#xA;                        if ( typeof thisParty.devicetype != 'undefined' &amp;amp;&amp;amp; thisParty.devicetype != 'agent' &amp;amp;&amp;amp; thisParty.devicetype != 'unknown' )&#xA;                       {&#xA;                          _data.system.context.ThisDN = _event.data.focusdeviceid;&#xA;                       }&#xA;                    }&#xA;               }&#xA;           }&#xA;}&#xA;else if(typeof _data.system.context.InteractionID != 'undefined' &amp;amp;&amp;amp; typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined'){&#xA;&#x9; _data.system.context.ThisDN = _event.data.focusdeviceid;&#xA;}&#xA;&lt;/script>" target="false" description="This handler is used when the platform detects a party state change for a party associated with the interaction."/>
    <eventsBackup xmi:type="datatypes:TransitionCommonItem" xmi:id="_QbgNj8OWEeWIDMqhxVagZg" name="catch all errors" event="error" condition="" body="&lt;if cond=&quot;!isEventHandledByApplication()&quot;>&#xA;&#x9;&lt;log expr=&quot;_sessionid + ': unexpected error received in IPD event handler ' + _event.toSource()&quot;/>&#xA;&#x9;&lt;if cond=&quot;typeof _event != 'undefined' &amp;amp;&amp;amp; typeof _event.data != 'undefined' &amp;amp;&amp;amp; typeof _event.data.description != 'undefined'&quot;>&#xA;&#x9;&#x9;&lt;log expr=&quot;_sessionid + ': Error message: ' + _event.data.description&quot; />&#xA;&#x9;&lt;/if>&#xA;&#x9;&lt;script>&#xA;&#x9;&#x9;&lt;![CDATA[&#xA;&#x9;&#x9;var autostop = (typeof _data.system.context.InteractionID != 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (typeof _genesys.ixn.interactions[_data.system.context.InteractionID] != 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (typeof _genesys.ixn.interactions[_data.system.context.InteractionID].voice == 'undefined')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; (_data.system.context.TerminateIxnOnExit == '1' || _data.system.context.TerminateIxnOnExit == 1);&#xA;&#x9;&#x9;]]>&#xA;&#x9;&lt;/script>&#xA;&#x9;&lt;if cond=&quot;autostop&quot;>&#xA;&#x9;&#x9;&lt;ixn:terminate interactionid=&quot;_data.system.context.InteractionID&quot; reason=&quot;'Auto-stop interaction'&quot;/>&#xA;&#x9;&lt;/if>&#xA;&#x9;&lt;raise event=&quot;application.exit&quot;>&#xA;&#x9;&#x9;&lt;param name=&quot;interactionid&quot; expr=&quot;_data.system.context.InteractionID&quot;/>&#xA;&#x9;&lt;/raise>&#xA;&lt;/if>" target="false" description="This handler is typically used to terminate the application when any error event is raised while executing this application and this error event is not handled by the application."/>
  </ipd:IpdDiagram>
  <notation:Diagram xmi:id="_xFEEQPr8Ed600N2F7x2Dtw" type="Ipd" element="_xE6TQPr8Ed600N2F7x2Dtw" name="default.ixnprocess" measurementUnit="Pixel">
    <children xmi:type="notation:Shape" xmi:id="_CvG4oAtaEd-dHN2RgOcklw" type="2006" element="_CtK-8AtaEd-dHN2RgOcklw">
      <children xmi:type="notation:DecorationNode" xmi:id="_CvG4ogtaEd-dHN2RgOcklw" type="5011"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_CvG4owtaEd-dHN2RgOcklw" type="5012"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_CvG4oQtaEd-dHN2RgOcklw" x="48" y="60"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_xFEEQfr8Ed600N2F7x2Dtw"/>
  </notation:Diagram>
</xmi:XMI>
